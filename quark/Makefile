OBJS = ast.cmo parser.cmo scanner.cmo \
	compile.cmo generator.cmo

TESTS = arith1 arith2 arith3 arith4 \
	fib \
	for1 for2 \
	func1 func2 func3 func4 func5 \
	gcd \
	global1 \
	hello \
	if1 if2	if3 if4 if5 \
	ops1 \
	var1 var2 var3 var4 \
	stmts1 \
	while1

TARFILES = Makefile testall.sh scanner.mll parser.mly \
	ast.ml compile.ml generator.ml \
	$(TESTS:%=tests/test-%.mc) \
	$(TESTS:%=tests/test-%.out)

quarkc : $(OBJS)
	ocamlc -o quarkc $(OBJS)

.PHONY : test
test : quarkc testall.sh
	./testall.sh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

DISABLE_WARN = -4-39-11

%.cmo : %.ml
	ocamlc -w +a$(DISABLE_WARN) -c $<

%.cmi : %.mli
	ocamlc -w +a$(DISABLE_WARN) -c $<

.PHONY : clean
clean :
	rm -f quarkc parser.ml parser.mli scanner.ml testall.log \
	*.cmo *.cmi *.out *.diff

# Generated by ocamldep *.ml *.mli
ast.cmo : type.cmi
ast.cmx : type.cmi
compile.cmo : parser.cmi
compile.cmx : parser.cmx
generator.cmo : type.cmi ast.cmo
generator.cmx : type.cmi ast.cmx
parser.cmo : type.cmi ast.cmo parser.cmi
parser.cmx : type.cmi ast.cmx parser.cmi
semantic.cmo : type.cmi sast.cmi ast.cmo
semantic.cmx : type.cmi sast.cmi ast.cmx
parser.cmi : ast.cmo
sast.cmi : type.cmi ast.cmo
type.cmi :
